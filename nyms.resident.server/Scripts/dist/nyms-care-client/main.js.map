{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/home/home.component.ts","./src/app/common/home/home.component.html","./src/app/common/login/login.component.ts","./src/app/common/login/login.component.html","./src/app/helpers/auth-admin.guard.ts","./src/app/helpers/auth-residents.guard.ts","./src/app/helpers/auth.guard.ts","./src/app/helpers/error.interceptor.no.refresh.ts","./src/app/helpers/index.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/helpers/store.ts","./src/app/residents/dashboard-residents/dashboard-residents.component.ts","./src/app/residents/dashboard-residents/dashboard-residents.component.html","./src/app/residents/enquires/enquires-edit/enquires-edit.component.ts","./src/app/residents/enquires/enquires-edit/enquires-edit.component.html","./src/app/residents/enquires/enquires-list/enquires-list.component.ts","./src/app/residents/enquires/enquires-list/enquires-list.component.html","./src/app/residents/enquires/enquires.component.ts","./src/app/residents/enquires/enquires.component.html","./src/app/residents/models/enquiry.resident.ts","./src/app/residents/models/index.ts","./src/app/residents/models/resident.ts","./src/app/residents/services/enquires.service.ts","./src/app/residents/services/index.ts","./src/app/residents/services/residents.service.ts","./src/app/residents/templ-edit/address-edit/address-edit.component.ts","./src/app/residents/templ-edit/address-edit/address-edit.component.html","./src/app/residents/templ-edit/care-type-edit/care-type-edit.component.ts","./src/app/residents/templ-edit/care-type-edit/care-type-edit.component.html","./src/app/residents/templ-edit/enquiry-misc-edit/enquiry-misc-edit.component.ts","./src/app/residents/templ-edit/enquiry-misc-edit/enquiry-misc-edit.component.html","./src/app/residents/templ-edit/resident-profile-edit/resident-profile-edit.component.ts","./src/app/residents/templ-edit/resident-profile-edit/resident-profile-edit.component.html","./src/app/residents/templ-edit/room-location-edit/room-location-edit.component.ts","./src/app/residents/templ-edit/room-location-edit/room-location-edit.component.html","./src/app/residents/templ-edit/social-worker-detail-edit/social-worker-detail-edit.component.ts","./src/app/residents/templ-edit/social-worker-detail-edit/social-worker-detail-edit.component.html","./src/app/services/api.service.ts","./src/app/services/authentication.service.ts","./src/app/services/index.ts","./src/app/services/user.service.ts","./src/app/services/weather.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './common/login/login.component';\r\nimport { HomeComponent } from './common/home/home.component';\r\nimport { DashboardResidentsComponent } from './residents/dashboard-residents/dashboard-residents.component';\r\nimport { EnquiresComponent } from './residents/enquires/enquires.component';\r\nimport { EnquiresEditComponent } from './residents/enquires/enquires-edit/enquires-edit.component';\r\n\r\nimport { AuthGuard, AuthResidentsGuard, AuthAdminGuard } from './helpers';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomeComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'residents',\r\n        component: DashboardResidentsComponent,\r\n        canActivate: [AuthResidentsGuard],\r\n        //resolve: { mydata: AuthResidentsResolver }\r\n    },\r\n    {\r\n        path: 'enquires',\r\n        component: EnquiresComponent,\r\n        canActivate: [AuthResidentsGuard]\r\n    },\r\n    {\r\n        path: 'enquires-edit/:referenceId',\r\n        component: EnquiresEditComponent\r\n    },\r\n    {\r\n        path: 'enquires-add',\r\n        component: EnquiresEditComponent\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'admin',\r\n        loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\r\n        canActivate: [AuthAdminGuard]\r\n    },\r\n    // // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    providers:[]\r\n})\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/index';\nimport { UserService } from '../app/services/index';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'nyms-care-client';\n\n  constructor(private authenticationService: AuthenticationService,\n    private userService: UserService) {}\n\n  ngOnInit(): void {\n\n  }\n\n  get isLoggedIn() {\n    if (this.authenticationService.getToken()){\n      return true;\n    }\n    return false;\n  }\n\n  get isAuthorized() {\n    //if (this.userService.isInRole('Manager') || this.userService.isInRole('Admin')) {\n      return true;\n    //}\n    //return false;\n  }\n\n  get isAdmin() {\n    //return this.userService.isInRole('Admin');\n    return true;\n  }\n\n  logout(): void {\n    this.userService.logout();\n  }\n\n\n}\n","<!-- nav -->\n<!-- <nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\"> -->\n  <header class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/']\">Home</a>\n      </li>\n\n      <!-- Authorized only -->\n      <li class=\"nav-item\" *ngIf=\"isAuthorized\">\n        <a class=\"nav-link\" [routerLink]=\"['residents']\">Residents</a>\n      </li>\n\n      <!-- Admin only -->\n      <li class=\"nav-item\" *ngIf=\"isAdmin\">\n        <a class=\"nav-link\" [routerLink]=\"['admin']\">Admin</a>\n      </li>\n\n      <!-- Anonymous only -->\n      <!-- <li class=\"nav-item\" *ngIf=\"!isAuthorized\">\n        <a class=\"nav-link\" [routerLink]=\"['login']\">Login</a>\n      </li> -->\n\n      <!-- Authorized only -->\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n        <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\n      </li>\n    </ul>\n\n    <span class=\"navbar-text\">\n      <!-- <span class=\"badge badge-warning\" *ngIf=\"isAuthorized\">Authorized</span>\n      <span class=\"badge badge-danger\" *ngIf=\"isAdmin\">Admin</span> -->\n    </span>\n</header>\n\n<!-- main app container -->\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { JwtInterceptor, ErrorInterceptorNoRefresh } from './helpers';\n// import { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HomeComponent } from './common/home/home.component';\nimport { LoginComponent } from './common/login/login.component';\n// import { UsersComponent } from './users/users.component';\n// import { WeatherComponent } from './weather/weather.component';\n// import { FinanceComponent } from './finance/finance.component';\n// import { ResidentsComponent } from './residents/residents.component';\n\nimport { DashboardResidentsComponent } from './residents/dashboard-residents/dashboard-residents.component';\nimport { EnquiresComponent } from './residents/enquires/enquires.component';\nimport { EnquiresEditComponent } from './residents/enquires/enquires-edit/enquires-edit.component';\nimport { EnquiresListComponent } from './residents/enquires/enquires-list/enquires-list.component';\nimport { AddressEditComponent } from './residents/templ-edit/address-edit/address-edit.component';\nimport { ResidentProfileEditComponent } from './residents/templ-edit/resident-profile-edit/resident-profile-edit.component';\nimport { SocialWorkerDetailEditComponent } from './residents/templ-edit/social-worker-detail-edit/social-worker-detail-edit.component';\nimport { CareTypeEditComponent } from './residents/templ-edit/care-type-edit/care-type-edit.component';\nimport { RoomLocationEditComponent } from './residents/templ-edit/room-location-edit/room-location-edit.component';\nimport { EnquiryMiscEditComponent } from './residents/templ-edit/enquiry-misc-edit/enquiry-misc-edit.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('id_token');\n}\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    NgbModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        authScheme: 'JWT'\n      }\n    })\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardResidentsComponent,\n    EnquiresComponent,\n    EnquiresEditComponent,\n    EnquiresListComponent,\n    AddressEditComponent,\n    ResidentProfileEditComponent,\n    SocialWorkerDetailEditComponent,\n    CareTypeEditComponent,\n    RoomLocationEditComponent,\n    EnquiryMiscEditComponent\n  ],\n  providers: [\n    //{ provide: APP_INITIALIZER, useFactory: appInitializer, multi: true, deps: [AuthenticationService] },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptorNoRefresh, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/index';\nimport { User, CareHomeUser } from '../../models/index';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  // local var ref, store value\n  isLoading: boolean;\n  userFound: boolean;\n  user: CareHomeUser;\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    console.log('>>p>>p>>', this.userService.getStoreUser());\n    //=== reload user on refresh =====================================\n    // if user token found and userValue is null, must be reloading or refreshing the page\n    // in-memory user is removed. so re-load user\n    if (this.userService.hasUserToken() && this.userService.getStoreUser() == null) {\n      console.log('>>sesion found. user hit F5, so get user again.');\n      this.isLoading = true;\n      this.userService.reloadUser().subscribe(u => {\n        this.user = u;\n        this.userFound = true;\n        this.isLoading = false;\n      });\n    } else {\n      this.user = this.userService.getStoreUser();\n    }\n    this.userFound = this.userService.getStoreUser() != null;\n    // ================================================================\n\n    // do other init for home page\n\n  }\n\n}\n","<!-- Home page -->\n<div class=\"container mt-5\">\n\n  <div class=\"row\">\n    <div class=\"col-md\">\n      <div *ngIf=\"isLoading\">loading...</div>\n    </div>\n  </div>\n\n  <div>\n    ==UserLogged: {{user}}\n  </div>\n\n  <div class=\"row\">\n    ==UserLogged: <p *ngIf=\"userFound\"> {{ user.userName }} - {{user.firstName}}</p>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { UserService, AuthenticationService } from '../../services/index';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private userService: UserService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n    this.loading = true;\n    console.log('>>>in loging comp0');\n    this.userService.login(this.f.username.value, this.f.password.value)\n    .subscribe(\n      data => {\n        console.log('>>now fetch the carehomeuser for ', data);\n        // if user found, then get CareHomeUser and set to store...\n        this.userService.reloadUser();\n        this.loading = false;\n        this.router.navigate([this.returnUrl]);\n      },\n      error => {\n        console.log('>>>Error:', error);\n        this.loading = false;\n      }\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n    // // this.authenticationService.login(this.f.username.value, this.f.password.value)\n    // this.userService.login(this.f.username.value, this.f.password.value)\n    //     .pipe(first())\n    //     .subscribe({\n    //         next: () => {\n    //           console.log('>>>in loging comp1', this.userService.userValue);\n    //           // this.userService.getRoles(1);\n    //           this.router.navigate([this.returnUrl]);\n    //         },\n    //         error: error => {\n    //             this.error = error;\n    //             this.loading = false;\n    //         }\n    //     });","<div class=\"col-md-6 offset-md-3 mt-5\">\n  <div class=\"alert alert-info\">\n      Username: test<br />\n      Password: test\n  </div>\n  <div class=\"card\">\n      <h4 class=\"card-header\">Angular 9 JWT Auth with Refresh Tokens</h4>\n      <div class=\"card-body\">\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"form-group\">\n                  <label for=\"username\">Username</label>\n                  <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"password\">Password</label>\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  </div>\n              </div>\n              <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                  <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                  Login\n              </button>\n              <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n          </form>\n      </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from '../services/index';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthAdminGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private userService: UserService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (!this.userService.hasUserToken()) {\r\n            this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        }\r\n\r\n        // if (this.userService.userRoleValues.length === 0) {\r\n        //     this.router.navigate([''], { });\r\n        // } else {\r\n        //     return this.userService.isInRole('Admin');\r\n        // }\r\n\r\n\r\n        return false;  //temp\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from '../services/index';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport { of,  } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\n// import 'rxjs/add/observable/of';\r\n// import 'rxjs/add/operator/delay';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthResidentsGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private userService: UserService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (!this.userService.hasUserToken()) {\r\n            this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        }\r\n        // console.log('>>>==', this.userService.userRoleValues);\r\n        // if (this.userService.userRoleValues.length === 0) {\r\n        //     // this.router.navigate([''], { });\r\n        //     this.userService.reloadUser().subscribe(s => {\r\n        //         if (this.userService.isInRole('Manager')){\r\n        //             this.router.navigate([state.url], { });\r\n        //         }\r\n        //     });\r\n        // } else {\r\n        //     return this.userService.isInRole('Manager');\r\n        // }\r\n\r\n\r\n        return true; //temp\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService, UserService } from '../services/index'; // '@app/services';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private userService: UserService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (!this.userService.hasUserToken()) {\r\n            this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport { catchError, switchMap, filter, take } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/index';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptorNoRefresh implements HttpInterceptor {\r\n    private isRefreshing = false;\r\n    private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            console.log('>>>errintnofresh:token expired.', err.status);\r\n\r\n            if ([401, 403].includes(err.status)) {\r\n                console.log('>>>status includes [401, 403]:');\r\n              if (err && err.error){\r\n                  console.log('>>>', err.error.message);\r\n                  if (err.error.message && err.error.message.includes('INVALID TOKEN:')){\r\n                      this.authenticationService.logout();\r\n                  }\r\n              }\r\n            }\r\n\r\n            const error = (err && err.error && err.error.message) || err.statusText;\r\n            console.error('>>>>=-', err);\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","//export * from './app.initializer';\r\nexport * from './auth.guard';\r\nexport * from './auth-residents.guard';\r\n// export * from './auth-residents.resolver';\r\nexport * from './auth-admin.guard';\r\n// export * from './error.interceptor';\r\nexport * from './error.interceptor.no.refresh';\r\n//export * from './fake-backend';\r\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { throwError, BehaviorSubject } from 'rxjs';\r\nimport { environment } from '../../environments/environment'; // '@environments/environment';\r\nimport { AuthenticationService } from '../services/index'; // '@app/services';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthenticationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    console.log('>>>>', request.url);\r\n    // add auth header with jwt if user is logged in and request is to the api url\r\n    const isapiDomainUrl = request.url.startsWith(environment.apiDomainUrl);\r\n    \r\n    const token = this.authService.getToken();\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class Store<T> {\r\n  private _state$: BehaviorSubject<T>;\r\n\r\n  protected constructor(initialState: T) {\r\n    this._state$ = new BehaviorSubject(initialState);\r\n  }\r\n\r\n  getValue(): T {\r\n    return this._state$.getValue();\r\n  }\r\n\r\n  getState(): Observable<T> {\r\n    return this._state$.asObservable();\r\n  }\r\n\r\n  setState(nextState: T): void {\r\n    this._state$.next(nextState);\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User, CareHomeUser } from '../../models/index';\nimport { UserService } from '../../services/index';\n\n@Component({\n  selector: 'app-dashboard-residents',\n  templateUrl: './dashboard-residents.component.html',\n  styleUrls: ['./dashboard-residents.component.css']\n})\nexport class DashboardResidentsComponent implements OnInit {\n  userFound: boolean;\n  user: CareHomeUser;\n\n  constructor(private router: Router, private userService: UserService) { }\n\n  ngOnInit(): void {\n    console.log('>>>dash-res');\n    //=== reload user on refresh =====================================\n    // if user token found and userValue is null, must be reloading or refreshing the page\n    // in-memory user is removed. so re-load user\n    if (this.userService.hasUserToken() && this.userService.getStoreUser() == null) {\n      this.userService.reloadUser().subscribe(u => {\n        this.user = u;\n        this.userFound = true;\n      });\n    } else {\n      this.user = this.userService.getStoreUser();\n    }\n    this.userFound = this.userService.getStoreUser() != null;\n    // ================================================================\n\n\n  }\n\n  navToEnquires(): void {\n    this.router.navigate(['/enquires', {} ]);\n  }\n\n}\n","<!-- Residents - Dashboard page -->\n==>>==<p *ngIf=\"userFound\"> {{ user.userName }} - {{user.firstName}}</p>\n\n<div class=\"container mt-5\">\n\n  <div class=\"row\">\n    <div class=\"col-md\">\n      <div class=\"card\" style=\"width: 18rem; height: 11rem;\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Enquires</h5>\n          <p class=\"card-text\">Manage enquiry to admission</p>\n          <button class=\"btn btn-primary\" (click)=\"navToEnquires()\">Enquires</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md\">\n      <div class=\"card\" style=\"width: 18rem; height: 11rem;\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Residents</h5>\n          <p class=\"card-text\">Manage residents information</p>\n          <button class=\"btn btn-primary\" (click)=\"navToEnquires()\">Residents</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  EnquiryResident,\n  createInstanceofEnquiryResident,\n} from '../../models/index';\nimport { EnquiresService } from '../../services';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\n// import { EnquiryService } from '@app/residents/services/enquiry.service';\n// import { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { RoomLocation, KeyPair } from '../../../models/index';\n\n\n@Component({\n  selector: 'app-enquires-edit',\n  templateUrl: './enquires-edit.component.html',\n  styleUrls: ['./enquires-edit.component.css'],\n})\nexport class EnquiresEditComponent implements OnInit {\n  private _enquiryResident: BehaviorSubject<\n    EnquiryResident\n  > = new BehaviorSubject<EnquiryResident>(createInstanceofEnquiryResident());\n  public enquiryResident$ = this._enquiryResident.asObservable();\n  enquiryResident: EnquiryResident;\n\n  roomLocations: RoomLocation[] = [\n    { id: 1, name: \"Main Floor\",rooms: [\n      { id: 10, locationId: 1, name: \"R-1\" },\n      { id: 11, locationId: 1, name: \"R-2\" },\n    ]},\n    { id: 2, name: \"First Floor\", rooms: [\n      { id: 20, locationId: 2, name: \"R-20\" },\n      { id: 21, locationId: 2, name: \"R-21\" },\n      { id: 22, locationId: 2, name: \"R-22\" },\n    ]},\n  ];\n\n  statuses: KeyPair[] = [\n    { key:'active', value:'Active'},\n    { key: 'admit', value: 'Admit'},\n    { key: 'closed', value:'Closed'}\n  ];\n\n  enquiryEditForm = new FormGroup({\n    status: new FormControl(''),\n  });\n\n  activeIds: string[] = ['panel-profile'] // default to open profile //, 'panel-address']\n  constructor(\n    private _Activatedroute: ActivatedRoute,\n    private _router: Router,\n    private enquiresService: EnquiresService\n  ) {}\n\n  ngOnInit(): void {\n    // init subscription for observables\n    this._enquiryResident.subscribe((enq) => (this.enquiryResident = enq));\n\n    this._Activatedroute.paramMap.subscribe((params) => {\n      console.log(params);\n      if (params && params.get('referenceId')) {\n        let referenceId: string = params.get('referenceId');\n\n        setTimeout(() => {\n          this.loadByReferenceId(referenceId);\n        }, 2000);\n      } else {\n        // add new enquiry. get home details into drop down box\n        // onchange of home, load room locations and room numbers\n\n      }\n    });\n  }\n\n  loadByReferenceId(referenceId: string): void {\n    if (referenceId === '' || referenceId === null) {\n      throw new console.error('Reference not found');\n    }\n    this.enquiresService.loadEnquiryByReferenceId(referenceId).subscribe({\n      next: (data) => {\n        console.log('>>>>', data);\n        this._enquiryResident.next(data);\n        // once data is available setup THIS form related with data\n        this.setupEnquiryEditForm(data);\n      },\n      error: (error) => {\n        console.log('ERROR:', error);\n      },\n    });\n  }\n\n  loadCareHomeDetails(): void {\n    \n  }\n\n  setupEnquiryEditForm(data: EnquiryResident): void {\n    if (data.status) { this.enquiryEditForm.controls['status'].setValue(data.status); }\n  }\n\n\n\n\n\n\n\n  //======================================================\n  // === Name, Surname etc profile\n  onForeNameUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      foreName: event.target.value,\n    };\n    // this._enquiryResident.next(newState);\n    this.updateState(newState);\n  }\n  onSurNameUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      surName: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  onMiddleNameUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      middleName: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  onDobUpdated(event: any): void {\n    console.log('InEnqEditForm=', event); // {year: 1962, month: 12, day: 16}\n    if (event) {\n      // const d = new Date(event.year, event.month-1, event.day);\n      let newState = {\n        ...this._enquiryResident.getValue(),\n        dob: this.convertToJsDate(event),\n      };\n      this.updateState(newState);\n    }\n  }\n  onGenderUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      gender: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  onMartialStatusUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      martialStatus: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  // =================================================\n\n  // === address info\n  onStreet1Updated(event: any): void {\n    console.log('InEnqEditForm=', event);\n    let address = {\n      ...this._enquiryResident.getValue().address,\n      street1: event.target.value,\n    };\n    let newState = { ...this._enquiryResident.getValue(), address: address };\n    this.updateState(newState);\n  }\n  onStreet2Updated(event: any): void {\n    let address = {\n      ...this._enquiryResident.getValue().address,\n      street2: event.target.value,\n    };\n    let newState = { ...this._enquiryResident.getValue(), address: address };\n    this.updateState(newState);\n  }\n  onCityUpdated(event: any): void {\n    let address = {\n      ...this._enquiryResident.getValue().address,\n      city: event.target.value,\n    };\n    let newState = { ...this._enquiryResident.getValue(), address: address };\n    this.updateState(newState);\n  }\n  onCountyUpdated(event: any): void {\n    let address = {\n      ...this._enquiryResident.getValue().address,\n      county: event.target.value,\n    };\n    let newState = { ...this._enquiryResident.getValue(), address: address };\n    this.updateState(newState);\n  }\n  onPostCodeUpdated(event: any): void {\n    let address = {\n      ...this._enquiryResident.getValue().address,\n      postCode: event.target.value,\n    };\n    let newState = { ...this._enquiryResident.getValue(), address: address };\n    this.updateState(newState);\n  }\n  // =================================================\n\n  // === social worker info\n  onSwForeNameUpdated(event: any): void {\n    let sw = {\n      ...this._enquiryResident.getValue().socialWorker,\n      foreName: event.target.value,\n    };\n    let newState = { ...this._enquiryResident.getValue(), socialWorker: sw };\n    this.updateState(newState);\n  }\n  onSwSurNameUpdated(event: any): void {\n    let sw = {\n      ...this._enquiryResident.getValue().socialWorker,\n      surName: event.target.value,\n    };\n    let newState = { ...this._enquiryResident.getValue(), socialWorker: sw };\n    this.updateState(newState);\n  }\n  onSwPhoneNumberUpdated(event: any): void {\n    let sw = {\n      ...this._enquiryResident.getValue().socialWorker,\n      phoneNumber: event.target.value,\n    };\n    let newState = { ...this._enquiryResident.getValue(), socialWorker: sw };\n    this.updateState(newState);\n  }\n  onSwEmailUpdated(event: any): void {\n    let sw = {\n      ...this._enquiryResident.getValue().socialWorker,\n      email: event.target.value,\n    };\n    let newState = { ...this._enquiryResident.getValue(), socialWorker: sw };\n    this.updateState(newState);\n  }\n  // ==================================================\n\n\n  // === care type ====================================\n  onCareCategoryUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      careCategory: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  onCareNeedsUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      careNeeds: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  onStayTypeUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      stayType: event.target.value,\n    };\n    this.updateState(newState);\n  }\n\n  // =================================================\n\n\n  // === room loc and number updated ================\n  onRoomLocationUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      reservedRoomLocation: event.target.value,\n      reservedRoomNumber: null,\n    };\n    this.updateState(newState);\n  }\n  onRoomNumberUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      reservedRoomNumber: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  // ===============================================\n\n\n\n  // === misc input ================================\n  onMoveInDateUpdated(event: any): void {\n    if (event) {\n      // const d = new Date(event.year, event.month-1, event.day);\n      let newState = {\n        ...this._enquiryResident.getValue(),\n        moveInDate: this.convertToJsDate(event),\n      };\n      this.updateState(newState);\n    }\n  }\n  onFamilyHomeVisitDateUpdated(event: any): void {\n    if (event) {\n      let newState = {\n        ...this._enquiryResident.getValue(),\n        familyHomeVisitDate: this.convertToJsDate(event),\n      };\n      this.updateState(newState);\n    }\n  }\n  onEnquiryDateUpdated(event: any): void {\n    if (event) {\n      let newState = {\n        ...this._enquiryResident.getValue(),\n        enquiryDate: this.convertToJsDate(event),\n      };\n      this.updateState(newState);\n    }\n  }\n  onResponseDateUpdated(event: any): void {\n    if (event) {\n      let newState = {\n        ...this._enquiryResident.getValue(),\n        responseDate: this.convertToJsDate(event),\n      };\n      this.updateState(newState);\n    }\n  }\n  onResponseUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      response: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  onCommentsUpdated(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      comments: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  // ==============================================\n\n\n  // === status and submit ========================\n  onStatusChange(event: any): void {\n    let newState = {\n      ...this._enquiryResident.getValue(),\n      status: event.target.value,\n    };\n    this.updateState(newState);\n  }\n  onSubmit(): void {\n    // validation...\n    console.log('>>>Ready to submit', this.enquiryResident);\n  }\n  onCancel(): void {\n    this._router.navigate(['/enquires', {} ]);\n  }\n\n\n  // =============================================\n\n\n\n\n  // === helper methods ==========================\n  updateState(state: EnquiryResident): void {\n    this._enquiryResident.next(state);\n  }\n  convertToJsDate(event: any): Date {\n    return new Date(event.year, event.month - 1, event.day);\n  }\n // =============================================\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  //************************************************************************************************ */\n  // this.enquiryService.loadEnquiryByReferenceId(referenceId)\n  // .subscribe(\n  //   data => {\n  //     console.log('>>>>>', data);\n  //     this.enquiryResident = data;\n  //     // let clone = Object.assign(this.residentProfile, {forName: 'aaa'});\n  //     this.residentProfile = Object.assign({}, {forName: 'aaa', surName: 'bbb', middleName: '', dob: undefined, gender: '', martialStatus: '' });\n  //     console.log('>>--', this.residentProfile);\n  //     //this.residentProfile.foreName = this.enquiryResident.foreName;\n\n  //     this.setEnquiryFieldValues();\n  //   },\n  //   error => console.log(`Error getting enquiry resident for ${referenceId}`)\n  // )\n  //}\n}\n\n//   // enquiryResident$: Observable<EnquiryResident>;\n//   enquiryResident: EnquiryResident;\n//   isLoading: boolean;\n//   public isCollapsed = false;\n//   model: NgbDateStruct;\n\n//   address: Address = { street1: '', street2: '', city: '', postCode: '', county: ''};\n//   residentProfile: ResidentProfile = { foreName: 'mn', surName: '', middleName: '', dob: undefined, gender: '', martialStatus: '' };\n//   socialWorker: SocialWorker = { foreName: '', surName: '', socialWorkerPhoneNumber: '', socialWorkerEmail: '' };\n\n//   constructor(private _Activatedroute:ActivatedRoute,\n//     private _router:Router,\n//     private enquiryService: EnquiryService) {\n//      this.enquiryResident = {} as EnquiryResident;\n//      }\n\n//   ngOnInit(): void {\n//     this._Activatedroute.paramMap.subscribe(params => {\n//       console.log(params);\n//       if (params && params.get('referenceId')){\n//         let referenceId: string = params.get('referenceId');\n//         this.loadByReferenceId(referenceId);\n//       }\n//     });\n\n//     // temp\n//     // this.address = { street1: '37 ante', street2: '', city: '', postCode: '', county: ''}\n//     // this.residentProfile = { foreName: '', surName: '', middleName: '', dob: undefined, gender: '', martialStatus: '' };\n//     // this.socialWorker = { foreName: '', surName: '', socialWorkerPhoneNumber: '', socialWorkerEmail: '' };\n\n//     // bind observable\n//     // this.enquiryService.getState().subscribe(\n//     //   data => {\n//     //     this.enquiryResident = data;\n//     //     console.log('>>', data);\n//     //     //this.setEnquiryFieldValues(data);\n//     //   }\n//     // );\n//   }\n\n//   loadByReferenceId(referenceId: string): void {\n//     if (referenceId === '' || referenceId === null) {\n//       throw new console.error('Reference not found');\n//     }\n//     this.enquiryService.loadEnquiryByReferenceId(referenceId)\n//     .subscribe(\n//       data => {\n//         console.log('>>>>>', data);\n//         this.enquiryResident = data;\n//         // let clone = Object.assign(this.residentProfile, {forName: 'aaa'});\n//         this.residentProfile = Object.assign({}, {forName: 'aaa', surName: 'bbb', middleName: '', dob: undefined, gender: '', martialStatus: '' });\n//         console.log('>>--', this.residentProfile);\n//         //this.residentProfile.foreName = this.enquiryResident.foreName;\n\n//         this.setEnquiryFieldValues();\n//       },\n//       error => console.log(`Error getting enquiry resident for ${referenceId}`)\n//     )\n//   }\n\n//   onCreate() {\n//     // TODO: Use EventEmitter with form value\n//     // const fv = this.enquiryProfileForm.value;\n//     // console.log(fv);\n//     // // create a new enquiry resident obj and send it\n//     // let enq = createInstanceofEnquiryResident();\n//     // enq.referenceId = fv.referenceId;\n//     // enq.foreName = fv.foreName;\n//     // enq.surName = fv.surName;\n//     // console.log('>>create-post', enq);\n//   }\n\n//   onUpdate() {\n//         // TODO: Use EventEmitter with form value\n//         // const fv = this.enquiryProfileForm.value;\n//         // console.log(fv);\n//         // // create a new enquiry resident obj and send it\n//         // let enq = createInstanceofEnquiryResident();\n//         // let moveIndate: Date = new Date('2020-09-24');\n//         // enq.referenceId = fv.referenceId;\n//         // enq.foreName = fv.foreName;\n//         // enq.surName = fv.surName;\n//         // enq.moveInDate = moveIndate;\n//         // console.log('>>update-put', enq);\n//   }\n\n//   private setEnquiryFieldValues(): void {\n//     if (this.enquiryResident && this.enquiryResident !== null){\n//       // this.enquiryProfileForm.controls['referenceId'].setValue(this.enquiryResident.referenceId);\n//       // this.enquiryProfileForm.controls['foreName'].setValue(this.enquiryResident.foreName);\n//       // this.enquiryProfileForm.controls['surName'].setValue(this.enquiryResident.surName);\n//     }\n//   }\n\n//   onResidentProfileUpdated(event: any): void {\n//     console.log('>>InEdtCompResupd', event);\n//   }\n\n//   onAddressUpdated(event: any): void {\n//     console.log('InEnqEditForm=', event);\n//     this.enquiryResident.address = event;\n//   }\n\n//   onSocialWorkerUpdated(event: any): void {\n//     console.log('InEnqEditForm=', event);\n//   }\n\n//   onCareTypeUpdated(event: any): void {\n//     console.log('InEnqEditForm=', event);\n//   }\n\n//   onRoomDetailUpdated(event: any): void {\n//     console.log('InEnqEditForm=', event);\n//   }\n\n// }\n\n//     /**    console.log('ngonit-enq');\n//     this.enquiryResidents$ = this.enquiresService.getState();\n//     console.log('>>>', this.enquiresService.getValue());\n//     console.log('>>>', this.enquiryResidents$);\n//     if (this.enquiresService.getValue() && this.enquiresService.getValue().length === 0) {\n//       this.isLoading = true;\n//       this.enquiresService.loadEnquiresAll()\n//       .subscribe(data => {\n//           // console.log(data);\n//           this.isLoading = false;\n//         },\n//         error => { console.log('>>>Error getting all enquires'); }\n//       )\n//     } */\n//   //   this._Activatedroute.paramMap.subscribe(params => {\n//   //     console.log(params);\n//   //     let id: number = +params.get('id');\n//   //      // let enq = this.enquiresService.enquiryResidents;\n//   //      this.enquiryResident = this.enquiresService.getResident(id);\n//   //      // this.orderForm.controls['total'].setValue(price/ this.orderForm.value.amount);\n//   //      if(this.enquiryResident){\n//   //       this.profileForm.controls['id'].setValue(this.enquiryResident.id);\n//   //       //this.profileForm.controls['firstName'].setValue(this.enquiryResident.firstName);\n//   //       this.profileForm.controls['surName'].setValue(this.enquiryResident.surName);\n//   //      }\n//   //  });\n","<!-- <ngb-accordion #acc=\"ngbAccordion\" activeIds=\"ngb-panel-0\"> -->\n<div class=\"mt-5\">\n\n  <ngb-accordion #acc=\"ngbAccordion\" [activeIds]=\"activeIds\">\n    <ngb-panel id=\"panel-profile\" title=\"Profile\">\n      <ng-template ngbPanelContent>\n\n        <div class=\"form-group\">\n          <label *ngIf=\"enquiryResident.referenceId\" for=\"referenceId\">Reference Id: {{ enquiryResident.referenceId }}</label>\n        </div>\n\n        <resident-profile-edit\n          [foreName]=\"enquiryResident.foreName\"\n          [surName]=\"enquiryResident.surName\"\n          [middleName]=\"enquiryResident.middleName\"\n          [dob]=\"enquiryResident.dob\"\n          [gender]=\"enquiryResident.gender\"\n          [martialStatus]=\"enquiryResident.martialStatus\"\n          (foreNameUpdated)=\"onForeNameUpdated($event)\"\n          (surNameUpdated)=\"onSurNameUpdated($event)\"\n          (middleNameUpdated)=\"onMiddleNameUpdated($event)\"\n          (dobUpdated)=\"onDobUpdated($event)\"\n          (genderUpdated)=\"onGenderUpdated($event)\"\n          (martialStatusUpdated)=\"onMartialStatusUpdated($event)\"\n        >\n        </resident-profile-edit>\n      </ng-template>\n    </ngb-panel>\n\n    <ngb-panel id=\"panel-address\" title=\"Address\">\n      <ng-template ngbPanelContent>\n        <address-edit\n          [street1]=\"enquiryResident.address.street1\"\n          [street2]=\"enquiryResident.address.street2\"\n          [city]=\"enquiryResident.address.city\"\n          [county]=\"enquiryResident.address.county\"\n          [postCode]=\"enquiryResident.address.postCode\"\n          (street1Updated)=\"onStreet1Updated($event)\"\n          (street2Updated)=\"onStreet2Updated($event)\"\n          (cityUpdated)=\"onCityUpdated($event)\"\n          (countyUpdated)=\"onCountyUpdated($event)\"\n          (postCodeUpdated)=\"onPostCodeUpdated($event)\"\n        >\n        </address-edit>\n      </ng-template>\n    </ngb-panel>\n\n    <ngb-panel title=\"Social Worker\">\n      <ng-template ngbPanelContent>\n        <social-worker-detail-edit\n          [foreName]=\"enquiryResident.socialWorker.foreName\"\n          [surName]=\"enquiryResident.socialWorker.surName\"\n          [phoneNumber]=\"enquiryResident.socialWorker.phoneNumber\"\n          [email]=\"enquiryResident.socialWorker.email\"\n          (swForeNameUpdated)=\"onSwForeNameUpdated($event)\"\n          (swSurNameUpdated)=\"onSwSurNameUpdated($event)\"\n          (swPhoneNumberUpdated)=\"onSwPhoneNumberUpdated($event)\"\n          (swEmailUpdated)=\"onSwEmailUpdated($event)\"\n        ></social-worker-detail-edit>\n      </ng-template>\n    </ngb-panel>\n\n    <ngb-panel title=\"Care Type Room Details\">\n      <ng-template ngbPanelContent>\n        <care-type-edit\n          [careCategory]=\"enquiryResident.careCategory\"\n          [careNeeds]=\"enquiryResident.careNeeds\"\n          [stayType]=\"enquiryResident.stayType\"\n          (careCategoryUpdated)=\"onCareCategoryUpdated($event)\"\n          (careNeedsUpdated)=\"onCareNeedsUpdated($event)\"\n          (stayTypeUpdated)=\"onStayTypeUpdated($event)\">\n        </care-type-edit>\n\n        <room-location-edit\n          [roomLocations]=\"roomLocations\"\n          [reservedRoomLocation]=\"enquiryResident.reservedRoomLocation\"\n          [reservedRoomNumber]=\"enquiryResident.reservedRoomNumber\"\n          (roomLocationUpdated)=\"onRoomLocationUpdated($event)\"\n          (roomNumberUpdated)=\"onRoomNumberUpdated($event)\"\n          >\n        </room-location-edit>\n      </ng-template>\n    </ngb-panel>\n\n    <ngb-panel title=\"Other\">\n      <ng-template ngbPanelContent>\n        <enquiry-misc-edit\n          [moveInDate]=\"enquiryResident.moveInDate\"\n          [familyHomeVisitDate]=\"enquiryResident.familyHomeVisitDate\"\n          [enquiryDate]=\"enquiryResident.enquiryDate\"\n          [responseDate]=\"enquiryResident.responseDate\"\n          [response]=\"enquiryResident.comments\"\n          (moveInDateUpdated)=\"onMoveInDateUpdated($event)\"\n          (familyHomeVisitDateUpdated)=\"onFamilyHomeVisitDateUpdated($event)\"\n          (enquiryDateUpdated)=\"onEnquiryDateUpdated($event)\"\n          (responseDateUpdated)=\"onResponseDateUpdated($event)\"\n          (responseUpdated)=\"onResponseUpdated($event)\"\n          (commentsUpdated)=\"onCommentsUpdated($event)\"\n        >\n        </enquiry-misc-edit>\n\n      </ng-template>\n    </ngb-panel>\n\n  </ngb-accordion>\n\n</div>\n\n<div>\n  <form [formGroup]=\"enquiryEditForm\">\n    <div class=\"form-group\">\n      <label for=\"status\">Status</label>\n      <select class=\"custom-select\" name=\"status\" id=\"status\" formControlName=\"status\" (change)=\"onStatusChange($event)\">\n        <option value=\"\" selected>Choose...</option>\n        <option *ngFor=\"let status of statuses;\" [value]=\"status.key\">\n          {{status.value}}\n        </option>\n      </select>\n    </div>\n  </form>\n</div>\n\n<div>\n  <div class=\"form-group\">\n    <button class=\"btn btn-secondary\" (click)=\"onCancel()\">Cancel</button>\n    <button class=\"btn btn-primary ml-5\" (click)=\"onSubmit()\">Submit</button>\n  </div>\n</div>\n\n\n\n\n\n\n<!-- ==>>>{{ enquiryResident | json }} -->\n","import { Component, OnInit, Input } from '@angular/core';\nimport { EnquiryResident } from '../../models/index';\n\n@Component({\n  selector: 'enquires-list',\n  templateUrl: './enquires-list.component.html',\n  styleUrls: ['./enquires-list.component.css']\n})\nexport class EnquiresListComponent implements OnInit {\n\n  @Input() enquiryResident: EnquiryResident;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  remove(referenceId: string){\n    console.log('>>removing>>', referenceId);\n  }\n\n}\n//<div *ngFor=\"let enquiry of enquiryResidents | async\">\n","<!-- Enquires List page. Lists all active enquires -->\n<div class=\"container\">\n\n\n\n  <div class=\"row\">\n    <div class=\"col-sm\">\n      {{enquiryResident.referenceId}}\n    </div>\n    <div class=\"col-sm\">\n      {{enquiryResident.foreName}}\n    </div>\n    <div class=\"col-sm\">\n      {{enquiryResident.surName}}\n    </div>\n    <div class=\"col-sm\">\n      <div *ngIf=\"enquiryResident.dob\">{{enquiryResident.dob | date}}</div>\n    </div>\n    <div class=\"col-sm\">\n      <a [routerLink]=\"['/enquires-edit', enquiryResident.referenceId]\">Edit</a>\n    </div>\n  </div>\n\n</div>\n<hr />\n<!-- <div>\n  ={{enquiryResident.referenceId}} - {{enquiryResident.foreName}} - {{enquiryResident.surName}}\n  ==<a [routerLink]=\"['/enquires-edit', enquiryResident.referenceId]\">Edit</a>\n  <button (click)=\"remove(enquiryResident.referenceId)\">X</button>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { EnquiryResident } from '../models/enquiry.resident';;\nimport { EnquiresService } from '../services';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n//import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-enquires',\n  templateUrl: './enquires.component.html',\n  styleUrls: ['./enquires.component.css']\n})\nexport class EnquiresComponent implements OnInit {\n  enquiryResidents$: Observable<EnquiryResident[]>;\n  isLoading: boolean;\n  // enquiryResidents: EnquiryResident;\n  //enquiryForm: FormGroup;\n\n  constructor(private enquiresService: EnquiresService, private router: Router) { //}, private formBuilder: FormBuilder) {\n    //this.enquiryForm = this.formBuilder.group({\n      // 'todo': ['', Validators.required]\n    //});\n  }\n\n\n  ngOnInit(): void {\n    //console.log('ngonit-enq');\n    this.enquiryResidents$ = this.enquiresService.getState();\n    // console.log('>>>', this.enquiresService.getValue());\n    // console.log('>>>', this.enquiryResidents$);\n    if (this.enquiresService.getValue() && this.enquiresService.getValue().length === 0) {\n      this.isLoading = true;\n      this.enquiresService.loadEnquiresAll()\n      .subscribe(data => {\n          console.log(data);\n          this.isLoading = false;\n        },\n        error => { console.log('>>>Error getting all enquires'); }\n      )\n    }\n  }\n\n  navToAddEnquiry(): void {\n    this.router.navigate(['/enquires-add']);\n  }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// onSubmit() {\n//   // // this.enquiresService.create({ value: this.todoForm.controls.todo.value });\n//   // let x = new EnquiryResident();\n//   // x.referenceId = '54544';\n//   // x.firstName = 'new enq fname';\n//   // x.surName = 'new enq surname';\n\n//   // this.enquiresService.create(x);\n// }\n\n// //update(enquiry: EnquiryResident) {\n\n//   // this.http.put<Todo>(`${this.baseUrl}/todos/${todo.id}`, JSON.stringify(todo)).subscribe(data => {\n//   //   this.dataStore.todos.forEach((t, i) => {\n//   //     if (t.id === data.id) { this.dataStore.todos[i] = data; }\n//   //   });\n\n//   //   this._todos.next(Object.assign({}, this.dataStore).todos);\n//   // }, error => console.log('Could not update todo.'));\n// //}\n\n// remove(id: number) {\n//   // this.http.delete(`${this.baseUrl}/todos/${todoId}`).subscribe(response => {\n//   //   this.dataStore.todos.forEach((t, i) => {\n//   //     if (t.id === todoId) { this.dataStore.todos.splice(i, 1); }\n//   //   });\n\n//   //   this._todos.next(Object.assign({}, this.dataStore).todos);\n//   // }, error => console.log('Could not delete todo.'));\n// }\n","\n<div class=\"container mt-5\">\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md\">\n        <div *ngIf=\"isLoading\">loading...</div>\n      </div>\n      <div class=\"col-md\">\n        <div class=\"float-right\">\n          <button class=\"btn btn-primary\" (click)=\"navToAddEnquiry()\">Add</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container mt-3\">\n    <div class=\"row\">\n      <div class=\"col-sm\">\n        <div class=\"h6\">ReferenceId</div>\n      </div>\n      <div class=\"col-sm\">\n        <div class=\"h6\">Fore Name</div>\n      </div>\n      <div class=\"col-sm\">\n        <div class=\"h6\">Sur Name</div>\n      </div>\n      <div class=\"col-sm\">\n        <div class=\"h6\">DOB</div>\n      </div>\n      <div class=\"col-sm\">\n      </div>\n    </div>\n\n    <div class=\"row mt-2\">\n      <div class=\"col-md\">\n        <enquires-list *ngFor=\"let enquiry of enquiryResidents$ | async\"\n          [enquiryResident]=\"enquiry\">\n        </enquires-list>\n      </div>\n    </div>\n  </div>\n\n\n\n\n</div>\n\n\n\n\n<!-- <div *ngFor=\"let enquiry of enquiryResidents$ | async\">\n  <div>{{enquiry.foreName}}</div>\n</div> -->\n","import { Address } from '../../models/address';\r\nimport { EnquiresEditComponent } from '../enquires/enquires-edit/enquires-edit.component';\r\n\r\n// export interface ResidentProfile {\r\n//   foreName: string;\r\n//   surName: string;\r\n//   middleName: string;\r\n//   dob: Date;\r\n//   gender: string;\r\n//   martialStatus: string;\r\n// }\r\n// export interface SocialWorker {\r\n//   foreName: string;\r\n//   surName: string;\r\n//   socialWorkerPhoneNumber: string;\r\n//   socialWorkerEmail: string;\r\n// }\r\n// export interface CareType {\r\n//   careCategory: string;\r\n//   careNeeds: string;\r\n//   stayType: string;\r\n// }\r\n// export interface RoomDetail {\r\n//   roomLocation: string;\r\n//   roomNumber: string;\r\n// }\r\n// export interface EnquiryMiscData {\r\n//   moveInDate: Date;\r\n//   familyHomeVisitDate: Date;\r\n//   enquiryDate: Date;\r\n//   responseDate: Date\r\n//   response: string;\r\n//   status: string;\r\n//   comments: string;\r\n// }\r\n\r\n/**  street1: string;\r\n  street2: string;\r\n  city: string;\r\n  county: string;\r\n  postCode: string;\r\n    socialWorkerForeName: string;\r\n  socialWorkerSurName: string;\r\n  phoneNumber: string;\r\n  email: string; */\r\n\r\nexport interface SocialWorker {\r\n  foreName: string;\r\n  surName: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n}\r\n\r\nexport interface EnquiryResident {\r\n  referenceId: string;\r\n  foreName: string;\r\n  surName: string;\r\n  middleName: string;\r\n  dob: Date;\r\n  gender: string;\r\n  martialStatus: string;\r\n  address: Address;\r\n  socialWorker: SocialWorker;\r\n  careCategory: string;\r\n  careNeeds: string;\r\n  stayType: string;\r\n  roomLocation: string;\r\n  roomNumber: string;\r\n  moveInDate: Date;\r\n  familyHomeVisitDate: Date;\r\n  enquiryDate: Date;\r\n  responseDate: Date;\r\n  response: string;\r\n  status: string;\r\n  comments: string;\r\n}\r\n\r\nexport function createInstanceofEnquiryResident() {\r\n  let model: EnquiryResident = {\r\n    referenceId: '',\r\n    foreName: '',\r\n    surName: '',\r\n    middleName: '',\r\n    dob: undefined,\r\n    gender: '',\r\n    martialStatus: '',\r\n    address: { street1: '', street2: '', city: '', county: '', postCode: '' },\r\n    // street1: '',\r\n    // street2: '',\r\n    // city: '',\r\n    // county: '',\r\n    // postCode: '',\r\n    socialWorker: {\r\n      foreName: '',\r\n      surName: '',\r\n      phoneNumber: '',\r\n      email: '',\r\n    },\r\n    // socialWorkerForeName: '',\r\n    // socialWorkerSurName: '',\r\n    // phoneNumber: '',\r\n    // email: '',\r\n    careCategory: '',\r\n    careNeeds: '',\r\n    stayType: '',\r\n    roomLocation: '',\r\n    roomNumber: '',\r\n    moveInDate: undefined,\r\n    familyHomeVisitDate: undefined,\r\n    enquiryDate: undefined,\r\n    responseDate: undefined,\r\n    response: '',\r\n    status: '',\r\n    comments: '',\r\n  };\r\n  return model;\r\n}\r\n\r\n// export function createInstanceofEnquiryResident() {\r\n//   // let model: EnquiryResident = {\r\n//   //   \"referenceId\": \"\",\r\n//   //   \"residentProfile\": {} as ResidentProfile,\r\n//   //   \"address\": {} as Address,\r\n//   //   \"socialWorker\": {} as SocialWorker,\r\n//   //   \"careType\": {} as CareType,\r\n//   //   \"roomDetail\": {} as RoomDetail,\r\n//   //   \"enquiryMiscData\": {} as EnquiryMiscData\r\n//   // };\r\n//   // return model;\r\n//   return null;\r\n// }\r\n\r\n// export interface EnquiryResidentxx {\r\n//   referenceId: string;\r\n//   residentProfile: ResidentProfile;\r\n//   address: Address;\r\n//   socialWorker: SocialWorker;\r\n//   careType: CareType;\r\n//   roomDetail: RoomDetail;\r\n//   enquiryMiscData: EnquiryMiscData;\r\n// }\r\n","export * from './resident';\r\nexport * from './enquiry.resident';","export class Resident {\r\n  id: number;\r\n  firstName: string;\r\n  surName: string;\r\n  middleName: string;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { EnquiryResident } from '../models';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { EnquiresEditComponent } from '../enquires/enquires-edit/enquires-edit.component';\nimport { Store } from '../../helpers/store';\nimport { ApiService } from '../../services/index';\nimport { map } from 'rxjs/operators';\n\n// https://stackblitz.com/edit/angular-fh1kyp?file=src%2Fapp%2Ftodo.service.ts\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnquiresService extends Store<EnquiryResident[]> {\n\n  constructor(private apiService: ApiService) {\n    super([]);\n  }\n\n  loadEnquiresAll(): Observable<EnquiryResident[]> {\n    return this.apiService.getEnquiresAll()\n    .pipe(\n      map((enqs) => {\n        this.setState(enqs);\n        return enqs;\n      })\n    );\n  }\n\n  loadEnquiryByReferenceId(referenceId: string): Observable<EnquiryResident> {\n    return this.apiService.getEnquiryByReferenceId(referenceId);\n  }\n\n  loadEnquiresAllByCareHomeId(careHomeId: number): Observable<EnquiryResident[]> {\n    return this.apiService.getEnquiresByHome(careHomeId)\n    .pipe(\n      map((enqs) => {\n        this.setState(enqs);\n        return enqs;\n      })\n    );\n  }\n\n  // loadCareHomeDetails(): Observable<\n\n\n\n  // loadEnquires(): void {\n  //   this.http.get<EnquiryResident[]>(`/api/users`)\n  //   .subscribe(data => {\n  //     console.log('>>>>from api', data);\n  //     this.setState(data);\n  //   },\n  //   error => {\n  //     console.log('Error getting enquiry residents api. ', error);\n  //   });\n  // }\n\n  // create(enquiryResident: EnquiryResident): void {\n  //   this.http.get<EnquiryResident[]>(`https://jsonplaceholder.typicode.com/users`)\n  //   .subscribe(data => {\n  //     console.log('>>>>from api', data);\n  //     this.setState(data);\n  //   },\n  //   error => {\n  //     console.log('Error getting enquiry residents api. ', error);\n  //   });\n  // }\n\n\n}\n\n\n\n\n\n// export class EnquiresService {\n//   private _enquiryResidents$ =  new BehaviorSubject<EnquiryResident[]>([]);\n//   readonly enquiryResidents = this._enquiryResidents$.asObservable();\n//   private dataStore: { enquiryResidents: EnquiryResident[] } = { enquiryResidents: [] };\n\n//   constructor(private http: HttpClient) { // , private enquiryStore: EnquiryStore\n//     // this.enquiryResidents$ = new BehaviorSubject<EnquiryResident[]>([]);\n//     // this.enquiryResidents = this.enquiryResidents$.asObservable();\n//    }\n\n//   loadAll() {\n//     this.http.get<EnquiryResident[]>(`${environment.apiDomainUrl}/api/carehomes/1/enquires`)\n//     .subscribe(data => {\n//       this.dataStore.enquiryResidents = data;\n//       this._enquiryResidents$.next(Object.assign({}, this.dataStore).enquiryResidents);\n//       // this.enquiryStore.enquires = data;\n//       // //Object.assign(this.dataStore.enquiryResidents, data);\n//       // console.log('>>==', this.enquiryStore.enquires);\n//       // this.enquiryStore.enquiryResidents.subscribe(k => {\n//       //   Object.assign(this.dataStore.enquiryResidents, k);\n//       //   console.log('====k=', k);\n//       // })\n//       //this.enquiryStore.enquiryResidents.subscribe\n//     }, error => console.log('Could not load enquires.'));\n//   }\n\n//   create(enqResident: EnquiryResident) {\n//     // this.http.post<Todo>(`${this.baseUrl}/todos`, JSON.stringify(todo)).subscribe(data => {\n//     //   this.dataStore.todos.push(data);\n//     //   this._todos.next(Object.assign({}, this.dataStore).todos);\n//     // }, error => console.log('Could not create todo.'));\n\n//     this.dataStore.enquiryResidents.push(enqResident);\n//   }\n\n//   getResident(id: number): EnquiryResident {\n//     if (this.dataStore.enquiryResidents.length > 0) {\n//       return this.dataStore.enquiryResidents.find(r => r.id === id);\n//     }\n//   }\n\n//   update(enquiry: EnquiryResident) {\n//     let xx = this.dataStore.enquiryResidents.map((e) => {\n//       if (e.id === enquiry.id) {\n//         return enquiry;\n//       } else {\n//         return e;\n//       }\n//     });\n//     this._enquiryResidents$.next(Object.assign({}, xx));\n//     // this.http.put<Todo>(`${this.baseUrl}/todos/${todo.id}`, JSON.stringify(todo)).subscribe(data => {\n//     //   this.dataStore.todos.forEach((t, i) => {\n//     //     if (t.id === data.id) { this.dataStore.todos[i] = data; }\n//     //   });\n\n//     //   this._todos.next(Object.assign({}, this.dataStore).todos);\n//     // }, error => console.log('Could not update todo.'));\n//   }\n\n//   remove(id: number) {\n//     // this.dataStore.enquiryResidents.forEach((t, i) => {\n//     //       if (t.id === id) {\n//     //         this.dataStore.enquiryResidents.splice(i, 1);\n//     //       }\n//     //     });\n//     // this.http.delete(`${this.baseUrl}/todos/${todoId}`).subscribe(response => {\n//     //   this.dataStore.todos.forEach((t, i) => {\n//     //     if (t.id === todoId) { this.dataStore.todos.splice(i, 1); }\n//     //   });\n\n//     //   this._todos.next(Object.assign({}, this.dataStore).todos);\n//     // }, error => console.log('Could not delete todo.'));\n//   }\n\n// }\n","export * from './residents.service';\r\nexport * from './enquires.service';\r\n//export * from './enquiry.service';","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n//import { Resident } from '../../models'; // '@app/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResidentsService {\n  constructor(private http: HttpClient) {}\n\n  // getAll() {\n  //   return this.http.get<Resident[]>(\n  //     `${environment.apiDomainUrl}/api/residents`\n  //   );\n  // }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n//import { Address } from '../../models/index';\n\n@Component({\n  selector: 'address-edit',\n  templateUrl: './address-edit.component.html',\n  styleUrls: ['./address-edit.component.css']\n})\nexport class AddressEditComponent implements OnInit {\n  @Input() street1: string;\n  @Input() street2: string;\n  @Input() city: string;\n  @Input() county: string;\n  @Input() postCode: string;\n  @Output() street1Updated = new EventEmitter<string>();\n  @Output() street2Updated = new EventEmitter<string>();\n  @Output() cityUpdated = new EventEmitter<string>();\n  @Output() countyUpdated = new EventEmitter<string>();\n  @Output() postCodeUpdated = new EventEmitter<string>();\n\n  addressForm = new FormGroup({\n    street1: new FormControl(''),\n    street2: new FormControl(''),\n    city: new FormControl(''),\n    county: new FormControl(''),\n    postCode: new FormControl(''),\n  });\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: any): void {\n    if (changes.street1) { this.addressForm.controls['street1'].setValue(changes.street1.currentValue); }\n    if (changes.street2) { this.addressForm.controls['street2'].setValue(changes.street2.currentValue); }\n    if (changes.city) { this.addressForm.controls['city'].setValue(changes.city.currentValue); }\n    if (changes.county) { this.addressForm.controls['county'].setValue(changes.county.currentValue); }\n    if (changes.postCode) { this.addressForm.controls['postCode'].setValue(changes.postCode.currentValue); }\n  }\n\n  onStreet1Change(event: any): void {\n    this.street1Updated.emit(event);\n  }\n  onStreet2Change(event: any): void {\n    this.street2Updated.emit(event);\n  }\n  onCityChange(event: any): void {\n    this.cityUpdated.emit(event);\n  }\n  onCountyChange(event: any): void {\n    this.countyUpdated.emit(event);\n  }\n  onPostCodeChange(event: any): void {\n    this.postCodeUpdated.emit(event);\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n  // onStreet1Change(event: any): void {\n  //   this._address.street1 = event.target.value;\n  //   this.onAddressChange();\n  // }\n  // onStreet2Change(event: any): void {\n  //   this._address.street2 = event.target.value;\n  //   this.onAddressChange();\n  // }\n  // onCityChange(event: any): void {\n  //   this._address.city = event.target.value;\n  //   this.onAddressChange();\n  // }\n  // onCountyChange(event: any): void {\n  //   this._address.county = event.target.value;\n  //   this.onAddressChange();\n  // }\n  // onPostCodeChange(event: any): void {\n  //   this._address.postCode = event.target.value;\n  //   this.onAddressChange();\n  // }\n\n  // onAddressChange(): void {\n  //   this.addressUpdated.emit(this._address);\n  // }\n\n  // setAddressFields(data: Address): void {\n  //   this.addressForm.controls['street1'].setValue(data.street1);\n  //   this.addressForm.controls['street2'].setValue(data.street2);\n  //   this.addressForm.controls['city'].setValue(data.city);\n  //   this.addressForm.controls['county'].setValue(data.county);\n  //   this.addressForm.controls['postCode'].setValue(data.postCode);\n  // }","<div>address form</div>\n<form [formGroup]=\"addressForm\">\n\n  <div class=\"form-group\">\n    <label for=\"street1\">Street 1</label>\n    <input type=\"text\" class=\"form-control\" id=\"street1\" name=\"street1\" formControlName=\"street1\" (change)=\"onStreet1Change($event)\" placeholder=\"\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"street2\">Street 2</label>\n    <input type=\"text\" class=\"form-control\" id=\"street2\" name=\"street2\" formControlName=\"street2\" (change)=\"onStreet2Change($event)\" placeholder=\"\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"city\">City</label>\n    <input type=\"text\" class=\"form-control\" id=\"city\" name=\"city\" formControlName=\"city\" (change)=\"onCityChange($event)\" placeholder=\"\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"county\">County</label>\n    <input type=\"text\" class=\"form-control\" id=\"county\" name=\"county\" formControlName=\"county\" (change)=\"onCountyChange($event)\" placeholder=\"\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"postCode\">PostCode</label>\n    <input type=\"text\" class=\"form-control\" id=\"postCode\" name=\"postCode\" formControlName=\"postCode\" (change)=\"onPostCodeChange($event)\" placeholder=\"\">\n  </div>\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'care-type-edit',\n  templateUrl: './care-type-edit.component.html',\n  styleUrls: ['./care-type-edit.component.css']\n})\nexport class CareTypeEditComponent implements OnInit {\n  @Input() careCategory: string;\n  @Input() careNeeds: string;\n  @Input() stayType: string;\n\n  @Output() careCategoryUpdated = new EventEmitter<string>();\n  @Output() careNeedsUpdated = new EventEmitter<string>();\n  @Output() stayTypeUpdated = new EventEmitter<string>();\n\n  careTypeForm = new FormGroup({\n    careCategory: new FormControl(''),\n    careNeeds: new FormControl(''),\n    stayType: new FormControl(''),\n  });\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: any): void {\n    console.log('ChangesCareType:', changes);\n    if (changes.careCategory) { this.careTypeForm.controls['careCategory'].setValue(changes.careCategory.currentValue); }\n    if (changes.careNeeds) { this.careTypeForm.controls['careNeeds'].setValue(changes.careNeeds.currentValue); }\n    if (changes.stayType) { this.careTypeForm.controls['stayType'].setValue(changes.stayType.currentValue); }\n  }\n\n  onCareCategoryChange(event: any): void {\n    this.careCategoryUpdated.emit(event);\n  }\n  onCareNeedsChange(event: any): void {\n    this.careNeedsUpdated.emit(event);\n  }\n  onStayTypeChange(event: any): void {\n    this.stayTypeUpdated.emit(event);\n  }\n}\n\n\n\n\n\n\n\n// ngOnInit(): void {\n//   // if (this.careType) {\n//   //   this._careType = this.careType;\n//   //   this.setCareTypeFields(this._careType);\n//   // }\n// }\n\n\n// onCareCategoryChange(event: any): void {\n//   this._careType.careCategory = event.target.value;\n//   this.onCareTypeInfoChange();\n// }\n// onCareNeedsChange(event: any): void {\n//   this._careType.careNeeds = event.target.value;\n//   this.onCareTypeInfoChange();\n// }\n// onStayTypeChange(event: any): void {\n//   this._careType.stayType = event.target.value;\n//   this.onCareTypeInfoChange();\n// }\n// onCareTypeInfoChange(): void {\n//   this.careTypeUpdated.emit(this._careType);\n// }\n\n// setCareTypeFields(data: CareType): void {\n//   this.careTypeForm.controls['careCategory'].setValue(data.careCategory);\n//   this.careTypeForm.controls['careNeeds'].setValue(data.careNeeds);\n//   this.careTypeForm.controls['stayType'].setValue(data.stayType);\n// }","<p>care-type-edit works!</p>\n\n<form [formGroup]=\"careTypeForm\">\n\n  <div class=\"form-group\">\n    <label for=\"careCategory\">Care Category</label>\n    <select class=\"custom-select\" name=\"careCategory\" id=\"careCategory\" formControlName=\"careCategory\" (change)=\"onCareCategoryChange($event)\">\n      <option value=\"\" selected>Choose...</option>\n      <option value=\"dementia\">Dementia</option>\n      <option value=\"residential\">Residential</option>\n      <option value=\"nursing\">Nursing</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"careNeeds\">Care Needs</label>\n    <select class=\"custom-select\" name=\"careNeeds\" id=\"careNeeds\" formControlName=\"careNeeds\" (change)=\"onCareNeedsChange($event)\">\n      <option value=\"\" selected>Choose...</option>\n      <option value=\"high\">High</option>\n      <option value=\"medium\">Medium</option>\n      <option value=\"low\">Low</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"stayType\">Stay Type</label>\n    <select class=\"custom-select\" name=\"stayType\" id=\"stayType\" formControlName=\"stayType\" (change)=\"onStayTypeChange($event)\">\n      <option value=\"\" selected>Choose...</option>\n      <option value=\"permanent\">Permanent</option>\n      <option value=\"respite\">Respite</option>\n    </select>\n  </div>\n\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n//import { EnquiryMiscData } from '../models';\n\n@Component({\n  selector: 'enquiry-misc-edit',\n  templateUrl: './enquiry-misc-edit.component.html',\n  styleUrls: ['./enquiry-misc-edit.component.css']\n})\nexport class EnquiryMiscEditComponent implements OnInit {\n  @Input() moveInDate: undefined;\n  @Input() familyHomeVisitDate: undefined;\n  @Input() enquiryDate: undefined;\n  @Input() responseDate: undefined;\n  @Input() response: string;\n  @Input() comments: string;\n  @Output() moveInDateUpdated = new EventEmitter<any>();\n  @Output() familyHomeVisitDateUpdated = new EventEmitter<any>();\n  @Output() enquiryDateUpdated = new EventEmitter<any>();\n  @Output() responseDateUpdated = new EventEmitter<any>();\n  @Output() responseUpdated = new EventEmitter<string>();\n  @Output() commentsUpdated = new EventEmitter<string>();\n\n  enquiryMiscForm = new FormGroup({\n    moveInDate: new FormControl(undefined),\n    familyHomeVisitDate: new FormControl(undefined),\n    enquiryDate: new FormControl(undefined),\n    responseDate: new FormControl(undefined),\n    response: new FormControl(''),\n    comments: new FormControl(''),\n    //status: new FormControl(''),\n  });\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnChanges(changes: any): void {\n    if (changes.moveInDate && changes.moveInDate.currentValue) {\n      const d = new Date(changes.moveInDate.currentValue);\n      this.enquiryMiscForm.controls['moveInDate'].setValue({year:d.getFullYear(),month:d.getMonth()+1,day:d.getDate()});\n    }\n    if (changes.familyHomeVisitDate && changes.familyHomeVisitDate.currentValue) {\n      const d = new Date(changes.familyHomeVisitDate.currentValue);\n      this.enquiryMiscForm.controls['familyHomeVisitDate'].setValue({year:d.getFullYear(),month:d.getMonth()+1,day:d.getDate()});\n    }\n    if (changes.enquiryDate && changes.enquiryDate.currentValue) {\n      const d = new Date(changes.enquiryDate.currentValue);\n      this.enquiryMiscForm.controls['enquiryDate'].setValue({year:d.getFullYear(),month:d.getMonth()+1,day:d.getDate()});\n    }\n    if (changes.responseDate && changes.responseDate.currentValue) {\n      const d = new Date(changes.responseDate.currentValue);\n      this.enquiryMiscForm.controls['responseDate'].setValue({year:d.getFullYear(),month:d.getMonth()+1,day:d.getDate()});\n    }\n\n    if (changes.response) { this.enquiryMiscForm.controls['response'].setValue(changes.response.currentValue); }\n    if (changes.comments) { this.enquiryMiscForm.controls['comments'].setValue(changes.comments.currentValue); }\n  }\n\n  onMoveInDateChange(event: any): void {\n    this.moveInDateUpdated.emit(event);\n  }\n  onFamilyHomeVisitDateChange(event: any): void {\n    this.familyHomeVisitDateUpdated.emit(event);\n  }\n  onEnquiryDateChange(event: any): void {\n    this.enquiryDateUpdated.emit(event);\n  }\n  onResponseDateChange(event: any): void {\n    this.responseDateUpdated.emit(event);\n  }\n  onResponseChange(event: any): void {\n    this.responseUpdated.emit(event);\n  }\n  onCommentsChange(event: any): void {\n    this.commentsUpdated.emit(event);\n  }\n\n}\n\n\n\n\n\n\n  // onMoveInDateChange(event: any): void {\n  //   this._miscData.moveInDate = event.target.value;\n  //   this.onEnquiryMiscDataChange();\n  // }\n  // onFamilyHomeVisitDateChange(event: any): void {\n  //   this._miscData.familyHomeVisitDate = event.target.value;\n  //   this.onEnquiryMiscDataChange();\n  // }\n  // onEnquiryDateChange(event: any): void {\n  //   this._miscData.enquiryDate = event.target.value;\n  //   this.onEnquiryMiscDataChange();\n  // }\n  // onResponseDateChange(event: any): void {\n  //   this._miscData.responseDate = event.target.value;\n  //   this.onEnquiryMiscDataChange();\n  // }\n  // onResponseChange(event: any): void {\n  //   this._miscData.response = event.target.value;\n  //   this.onEnquiryMiscDataChange();\n  // }\n  // onCommentsChange(event: any): void {\n  //   this._miscData.comments = event.target.value;\n  //   this.onEnquiryMiscDataChange();\n  // }\n  // onStatusChange(event: any): void {\n  //   this._miscData.status = event.target.value;\n  //   this.onEnquiryMiscDataChange();\n  // }\n\n  // onEnquiryMiscDataChange(): void {\n  //   this.miscDataUpdated.emit(this._miscData);\n  // }\n\n  // setMiscDataFields(data: EnquiryMiscData): void {\n  //   this.enquiryMiscForm.controls['moveInDate'].setValue(data.moveInDate);\n  //   this.enquiryMiscForm.controls['familyHomeVisitDate'].setValue(data.familyHomeVisitDate);\n  //   this.enquiryMiscForm.controls['enquiryDate'].setValue(data.enquiryDate);\n  //   this.enquiryMiscForm.controls['responseDate'].setValue(data.responseDate);\n  //   this.enquiryMiscForm.controls['response'].setValue(data.response);\n  //   this.enquiryMiscForm.controls['comments'].setValue(data.comments);\n  //   this.enquiryMiscForm.controls['status'].setValue(data.status);\n  // }","<p>enquiry-misc-edit works!</p>\n\n<form [formGroup]=\"enquiryMiscForm\">\n\n  <div class=\"form-group\">\n    <label for=\"moveInDate\">Move In Date</label>\n    <div class=\"input-group\">\n      <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n        formControlName=\"moveInDate\" name=\"moveInDate\" (dateSelect)=\"onMoveInDateChange($event)\" ngbDatepicker #d1=\"ngbDatepicker\">\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d1.toggle()\" type=\"button\"></button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"familyHomeVisitDate\">Family Home Visit Date</label>\n    <div class=\"input-group\">\n      <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n        formControlName=\"familyHomeVisitDate\" name=\"familyHomeVisitDate\" (dateSelect)=\"onFamilyHomeVisitDateChange($event)\" ngbDatepicker #d2=\"ngbDatepicker\">\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d2.toggle()\" type=\"button\"></button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"enquiryDate\">Enquiry Date</label>\n    <div class=\"input-group\">\n      <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n        formControlName=\"enquiryDate\" name=\"enquiryDate\" (dateSelect)=\"onEnquiryDateChange($event)\" ngbDatepicker #d3=\"ngbDatepicker\">\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d3.toggle()\" type=\"button\"></button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"responseDate\">Response Date</label>\n    <div class=\"input-group\">\n      <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n        formControlName=\"responseDate\" name=\"responseDate\" (dateSelect)=\"onResponseDateChange($event)\" ngbDatepicker #d4=\"ngbDatepicker\">\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d4.toggle()\" type=\"button\"></button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"response\">Response</label>\n    <textarea matInput rows=\"4\" class=\"form-control\" id=\"response\" name=\"response\" formControlName=\"response\" (change)=\"onResponseChange($event)\" placeholder=\"\"></textarea>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"comments\">Comments</label>\n    <textarea rows=\"4\" class=\"form-control\" id=\"comments\" name=\"comments\" formControlName=\"comments\" (change)=\"onCommentsChange($event)\" placeholder=\"\"></textarea>\n  </div>\n\n  <!-- <div class=\"form-group\">\n    <label for=\"status\">Status</label>\n    <select class=\"custom-select\" name=\"status\" id=\"status\" (change)=\"onStatusChange($event)\">\n      <option selected>Choose...</option>\n      <option value=\"open\">Open</option>\n      <option value=\"admitted\">Admitted</option>\n      <option value=\"closed\">Closed</option>\n    </select>\n  </div> -->\n\n  </form>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'resident-profile-edit',\n  templateUrl: './resident-profile-edit.component.html',\n  styleUrls: ['./resident-profile-edit.component.css']\n})\nexport class ResidentProfileEditComponent implements OnInit {\n  @Input() foreName: string;\n  @Input() surName: string;\n  @Input() middleName: string;\n  @Input() dob: undefined;\n  @Input() gender: string;\n  @Input() martialStatus: string;\n\n  @Output() foreNameUpdated = new EventEmitter<string>();\n  @Output() surNameUpdated = new EventEmitter<string>();\n  @Output() middleNameUpdated = new EventEmitter<string>();\n  @Output() dobUpdated = new EventEmitter<any>();\n  @Output() genderUpdated = new EventEmitter<string>();\n  @Output() martialStatusUpdated = new EventEmitter<string>();\n\n  profileForm = new FormGroup({\n    foreName: new FormControl(''),\n    surName: new FormControl(''),\n    middleName: new FormControl(''),\n    dob: new FormControl(undefined),\n    gender: new FormControl(''),\n    martialStatus: new FormControl(''),\n  });\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: any): void {\n    console.log('ngonchg', changes);\n    if (changes.foreName) { this.profileForm.controls['foreName'].setValue(changes.foreName.currentValue); }\n    if (changes.surName) { this.profileForm.controls['surName'].setValue(changes.surName.currentValue); }\n    if (changes.middleName) { this.profileForm.controls['middleName'].setValue(changes.middleName.currentValue); }\n    if (changes.dob) {\n      if (changes.dob.currentValue){\n        const d = new Date(changes.dob.currentValue);\n        this.profileForm.controls['dob'].setValue({year:d.getFullYear(),month:d.getMonth()+1,day:d.getDate()});\n      }\n    }\n    if (changes.gender) { this.profileForm.controls['gender'].setValue(changes.gender.currentValue); }\n  }\n\n  onForeNameChange(event: any): void {\n    this.foreNameUpdated.emit(event);\n  }\n  onSurNameChange(event: any): void {\n    this.surNameUpdated.emit(event);\n  }\n  onMiddleNameChange(event: any): void {\n    this.middleNameUpdated.emit(event);\n  }\n  onDobChange(event: any): void {\n    this.dobUpdated.emit(event);\n  }\n  onGenderChange(event: any): void {\n    this.genderUpdated.emit(event);\n  }\n  onMartialStatusChange(event: any): void {\n    this.martialStatusUpdated.emit(event);\n  }\n\n}\n\n\n\n\n\n\n  // onResidentProfileChange(): void {\n  //   // this.residentProfileUpdated.emit(this._residentProfile);\n  // }\n  // setResidentProfileFields(changes: any): void  {     //data: ResidentProfile): void {\n  //   this.profileForm.controls['foreName'].setValue(changes.foreName.currentValue);\n  //   this.profileForm.controls['surName'].setValue(changes.surName.currentValue);\n  //   // this.profileForm.controls['middleName'].setValue(data.middleName);\n  //   // this.profileForm.controls['dob'].setValue(data.dob);\n  //   // this.profileForm.controls['gender'].setValue(data.gender);\n  //   // this.profileForm.controls['martialStatus'].setValue(data.martialStatus);\n  // }\n\n  // // @Input() residentProfile: ResidentProfile;\n  // // @Output() residentProfileUpdated = new EventEmitter<ResidentProfile>();\n  // // _residentProfile: ResidentProfile;\n\n  // profileForm = new FormGroup({\n  //   foreName: new FormControl(''),\n  //   surName: new FormControl(''),\n  //   middleName: new FormControl(''),\n  //   dob: new FormControl(''),\n  //   gender: new FormControl(''),\n  //   martialStatus: new FormControl(''),\n  // });\n\n  // constructor() { }\n\n  // ngOnInit(): void {\n  //   // if (this.residentProfile) {\n  //   //   this._residentProfile = this.residentProfile;\n  //   //   this.setResidentProfileFields(this._residentProfile);\n  //   // }\n  // }\n\n\n  // onForeNameChange(event: any): void {\n  //   this._residentProfile.foreName = event.target.value;\n  //   this.onResidentProfileChange();\n  // }\n  // onSurNameChange(event: any): void {\n  //   this._residentProfile.surName = event.target.value;\n  //   this.onResidentProfileChange();\n  // }\n  // onMiddleNameChange(event: any): void {\n  //   this._residentProfile.middleName = event.target.value;\n  //   this.onResidentProfileChange();\n  // }\n  // onDobChange(event: any): void {\n  //   console.log('>>>dobch');\n  //   this._residentProfile.dob = event.target.value;\n  //   this.onResidentProfileChange();\n  // }\n  // onGenderChange(event: any): void {\n  //   this._residentProfile.gender = event.target.value;\n  //   this.onResidentProfileChange();\n  // }\n  // onMartialStatusChange(event: any): void {\n  //   this._residentProfile.martialStatus = event.target.value;\n  //   this.onResidentProfileChange();\n  // }\n\n  // onResidentProfileChange(): void {\n  //   this.residentProfileUpdated.emit(this._residentProfile);\n  // }\n\n  // setResidentProfileFields(data: ResidentProfile): void {\n  //   this.profileForm.controls['foreName'].setValue(data.foreName);\n  //   this.profileForm.controls['surName'].setValue(data.surName);\n  //   this.profileForm.controls['middleName'].setValue(data.middleName);\n  //   this.profileForm.controls['dob'].setValue(data.dob);\n  //   this.profileForm.controls['gender'].setValue(data.gender);\n  //   this.profileForm.controls['martialStatus'].setValue(data.martialStatus);\n  // }\n\n//}\n","<form [formGroup]=\"profileForm\">\n\n  <div class=\"form-group\">\n    <label for=\"foreName\">Fore Name</label>\n    <input type=\"text\" class=\"form-control\" id=\"foreName\" name=\"foreName\" formControlName=\"foreName\" (change)=\"onForeNameChange($event)\" placeholder=\"\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"foreName\">Sur Name</label>\n    <input type=\"text\" class=\"form-control\" id=\"surName\" name=\"surName\" formControlName=\"surName\" (change)=\"onSurNameChange($event)\" placeholder=\"\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"middleName\">Middle Name</label>\n    <input type=\"text\" class=\"form-control\" id=\"middleName\" name=\"middleName\" formControlName=\"middleName\" (change)=\"onMiddleNameChange($event)\" placeholder=\"\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"dob\">DOB</label>\n    <div class=\"input-group\">\n      <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n        formControlName=\"dob\" name=\"dob\" (dateSelect)=\"onDobChange($event)\" ngbDatepicker #d=\"ngbDatepicker\">\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <div>\n      <label for=\"gender\">Gender</label>\n    </div>\n\n    <div class=\"custom-control custom-radio custom-control-inline\">\n      <input type=\"radio\" class=\"custom-control-input\" id=\"genderMale\"\n        formControlName=\"gender\" name=\"gender\" (change)=\"onGenderChange($event)\" value=\"male\">\n      <label class=\"custom-control-label\" for=\"genderMale\">Male</label>\n    </div>\n\n    <div class=\"custom-control custom-radio custom-control-inline\">\n      <input type=\"radio\" class=\"custom-control-input\" id=\"genderFemale\"\n        formControlName=\"gender\" name=\"gender\" (change)=\"onGenderChange($event)\" value=\"female\">\n      <label class=\"custom-control-label\" for=\"genderFemale\">Female</label>\n    </div>\n\n    <div class=\"custom-control custom-radio custom-control-inline\">\n      <input type=\"radio\" class=\"custom-control-input\" id=\"genderNotDisclosed\"\n        formControlName=\"gender\" name=\"gender\" (change)=\"onGenderChange($event)\" value=\"notdisclosed\">\n      <label class=\"custom-control-label\" for=\"genderNotDisclosed\">Not Disclosed</label>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <div>\n      <label for=\"maritalStatus\">Martial Status</label>\n    </div>\n\n    <div class=\"custom-control custom-radio custom-control-inline\">\n      <input type=\"radio\" class=\"custom-control-input\" id=\"maritalStatusMarried\"\n        formControlName=\"martialStatus\" name=\"martialStatus\" (change)=\"onMartialStatusChange($event)\" value=\"married\">\n      <label class=\"custom-control-label\" for=\"maritalStatusMarried\">Married</label>\n    </div>\n\n    <div class=\"custom-control custom-radio custom-control-inline\">\n      <input type=\"radio\" class=\"custom-control-input\" id=\"maritalStatusDivorced\"\n      formControlName=\"martialStatus\" name=\"martialStatus\" (change)=\"onMartialStatusChange($event)\" value=\"divorced\">\n      <label class=\"custom-control-label\" for=\"maritalStatusDivorced\">Divorced</label>\n    </div>\n\n    <div class=\"custom-control custom-radio custom-control-inline\">\n      <input type=\"radio\" class=\"custom-control-input\" id=\"maritalStatusWidower\"\n      formControlName=\"martialStatus\" name=\"martialStatus\" (change)=\"onMartialStatusChange($event)\" value=\"widower\">\n      <label class=\"custom-control-label\" for=\"maritalStatusWidower\">Widower</label>\n    </div>\n\n    <div class=\"custom-control custom-radio custom-control-inline\">\n      <input type=\"radio\" class=\"custom-control-input\" id=\"maritalStatusSingle\"\n      formControlName=\"martialStatus\" name=\"martialStatus\" (change)=\"onMartialStatusChange($event)\" value=\"single\">\n      <label class=\"custom-control-label\" for=\"maritalStatusSingle\">Single</label>\n    </div>\n  </div>\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { RoomLocation, Room } from '../../../models/index';\n\n\n@Component({\n  selector: 'room-location-edit',\n  templateUrl: './room-location-edit.component.html',\n  styleUrls: ['./room-location-edit.component.css']\n})\nexport class RoomLocationEditComponent implements OnInit {\n  @Input() roomLocations: RoomLocation[];\n  @Input() reservedRoomLocation: number = 0;\n  @Input() reservedRoomNumber: number = 0;\n  roomNumbers: Room[] = [];\n\n\n  @Output() roomLocationUpdated = new EventEmitter<string>();\n  @Output() roomNumberUpdated = new EventEmitter<string>();\n\n  roomDetailForm =new FormGroup({\n    roomLocations: new FormControl(''),\n    rooms: new FormControl(''),\n  });\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: any): void {\n    console.log('ngonchg==', changes);\n    if (changes.reservedRoomLocation) { this.roomDetailForm.controls['roomLocations'].setValue(changes.reservedRoomLocation.currentValue); }\n    if (changes.reservedRoomNumber) {\n      if (this.reservedRoomLocation > 0) {\n        this.loadRoomsByLocationId(this.reservedRoomLocation);\n        this.roomDetailForm.controls['rooms'].setValue(changes.reservedRoomNumber.currentValue);\n      }\n    }\n  }\n\n\n  onRoomLocationChange(event: any): void {\n    this.loadRoomsByLocationId(event.target.value);\n    this.roomLocationUpdated.emit(event);\n  }\n  onRoomChange(event: any): void {\n    this.roomNumberUpdated.emit(event);\n  }\n\n  loadRoomsByLocationId(locId: number): void {\n    const selLoc = this.roomLocations.filter(loc => loc.id == locId);\n    this.roomNumbers = selLoc.map(x => x.rooms)[0];\n  }\n\n}\n\n\n\n\n  // onRoomLocationChange(event: any): void {\n  //   this._roomDetail.roomLocation = event.target.value;\n  //   this.onRoomDetailInfoChange();\n  // }\n\n  // onRoomNumberChange(event: any): void {\n  //   this._roomDetail.roomNumber = event.target.value;\n  //   this.onRoomDetailInfoChange();\n  // }\n  // onRoomDetailInfoChange(): void {\n  //   this.roomDetailUpdated.emit(this._roomDetail);\n  // }\n\n  // setRoomDetailFields(data: RoomDetail): void {\n  //   this.roomDetailForm.controls['roomLocation'].setValue(data.roomLocation);\n  //   this.roomDetailForm.controls['roomNumber'].setValue(data.roomNumber);\n  // }\n","<p>room-location-edit works!</p>\r\n\r\n<form [formGroup]=\"roomDetailForm\">\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"roomLocations\">Room Location</label>\r\n    <select class=\"custom-select\" name=\"roomLocations\" id=\"roomLocations\" formControlName=\"roomLocations\" (change)=\"onRoomLocationChange($event)\">\r\n      <option value=\"\" selected>Choose...</option>\r\n      <option *ngFor=\"let rmloc of roomLocations;\" [value]=\"rmloc.id\">\r\n        {{rmloc.name}}\r\n      </option>\r\n    </select>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"rooms\">Room Number</label>\r\n    <select class=\"custom-select\" name=\"rooms\" id=\"rooms\" formControlName=\"rooms\" (change)=\"onRoomChange($event)\">\r\n      <option value=\"\" selected>Choose...</option>\r\n      <option *ngFor=\"let room of roomNumbers;\" [value]=\"room.id\">\r\n        {{room.name}}\r\n      </option>\r\n    </select>\r\n  </div>\r\n\r\n</form>\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'social-worker-detail-edit',\n  templateUrl: './social-worker-detail-edit.component.html',\n  styleUrls: ['./social-worker-detail-edit.component.css'],\n})\nexport class SocialWorkerDetailEditComponent implements OnInit {\n  @Input() foreName: string;\n  @Input() surName: string;\n  @Input() phoneNumber: string;\n  @Input() email: string;\n\n  @Output() swForeNameUpdated = new EventEmitter<string>();\n  @Output() swSurNameUpdated = new EventEmitter<string>();\n  @Output() swPhoneNumberUpdated = new EventEmitter<string>();\n  @Output() swEmailUpdated = new EventEmitter<string>();\n\n  socialWorkerForm = new FormGroup({\n    foreName: new FormControl(''),\n    surName: new FormControl(''),\n    phoneNumber: new FormControl(''),\n    email: new FormControl(''),\n  });\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: any): void {\n    if (changes.foreName) {\n      this.socialWorkerForm.controls['foreName'].setValue(\n        changes.foreName.currentValue\n      );\n    }\n    if (changes.surName) {\n      this.socialWorkerForm.controls['surName'].setValue(\n        changes.surName.currentValue\n      );\n    }\n    if (changes.phoneNumber) {\n      this.socialWorkerForm.controls['phoneNumber'].setValue(\n        changes.phoneNumber.currentValue\n      );\n    }\n    if (changes.email) {\n      this.socialWorkerForm.controls['email'].setValue(\n        changes.email.currentValue\n      );\n    }\n  }\n\n  onSwForeNameChange(event: any): void {\n    this.swForeNameUpdated.emit(event);\n  }\n  onSwSurNameChange(event: any): void {\n    this.swSurNameUpdated.emit(event);\n  }\n  onSwPhoneNumberChange(event: any): void {\n    this.swPhoneNumberUpdated.emit(event);\n  }\n  onSwEmailChange(event: any): void {\n    this.swEmailUpdated.emit(event);\n  }\n}\n","<p>social-worker-detail-edit works!</p>\n<form [formGroup]=\"socialWorkerForm\">\n  <div class=\"form-group\">\n    <label for=\"foreName\">Fore Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"foreName\"\n      name=\"foreName\"\n      formControlName=\"foreName\"\n      (change)=\"onSwForeNameChange($event)\"\n      placeholder=\"\"\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"surName\">Sur Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"surName\"\n      name=\"surName\"\n      formControlName=\"surName\"\n      (change)=\"onSwSurNameChange($event)\"\n      placeholder=\"\"\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"phoneNumber\">Phone Number</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"phoneNumber\"\n      name=\"phoneNumber\"\n      formControlName=\"phoneNumber\"\n      (change)=\"onSwPhoneNumberChange($event)\"\n      placeholder=\"\"\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"email\">Phone Number</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"email\"\n      name=\"email\"\n      formControlName=\"email\"\n      (change)=\"onSwEmailChange($event)\"\n      placeholder=\"\"\n    />\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { User, CareHomeUser } from '../models/index';\nimport { EnquiryResident } from '../residents/models/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  // === User related ===\n  authenticateUser(username: string, password: string): Observable<User> {\n    //console.log('in api service. authenticateUser');\n    return this.http.post<any>(\n      `/api/authentication/authenticate`,\n      { username, password },\n      { withCredentials: true }\n    );\n    // .post<any>(\n    //   `${environment.apiDomainUrl}/api/authentication/authenticate`,\n    //   { username, password },\n    //   { withCredentials: true }\n    // );\n  }\n\n  // change to ref id later\n  // getUserById(id: number): Observable<User> {\n  getCareHomeUserByReferenceId(referenceId: string): Observable<CareHomeUser> {\n    return this.http.get<CareHomeUser>(\n      `/api/users/carehomeusers/${referenceId}`,\n      { withCredentials: true }\n    );\n    // return this.http.get<CareHomeUser>(\n    //   `${environment.apiDomainUrl}/api/users/carehomeusers/${referenceId}`,\n    //   { withCredentials: true }\n    // );\n  }\n  //=== endof user related ===\n\n  // === enquires related ===\n  getEnquiresAll(): Observable<EnquiryResident[]> {\n    return this.http.get<EnquiryResident[]>(\n      `${environment.apiDomainUrl}/api/carehomes/enquires`\n    );\n  }\n\n  getEnquiresByHome(careHomeId: number): Observable<EnquiryResident[]> {\n    return this.http.get<EnquiryResident[]>(\n      `${environment.apiDomainUrl}/api/carehomes/${careHomeId}/enquires`\n    );\n  }\n\n  getEnquiryByReferenceId(referenceId: string): Observable<EnquiryResident> {\n    return this.http.get<EnquiryResident>(\n      `${environment.apiDomainUrl}/api/enquires/${referenceId}`\n    );\n  }\n\n  createEnquiryResident(enqResident: EnquiryResident) {\n    return this.http.post<any>(\n      `${environment.apiDomainUrl}/api/enquires`,\n      enqResident\n    );\n  }\n\n  updateEnquiryResident(enqResident: EnquiryResident) {\n    return this.http.put<EnquiryResident>(\n      `${environment.apiDomainUrl}/api/enquires/${enqResident.referenceId}`,\n      enqResident\n    );\n  }\n\n  // temp\n  // createEnquiryResident222(enqResident: EnquiryResident) {\n  //   console.log('>>=>>', enqResident);\n  //   return this.http.post<any>(`${environment.apiDomainUrl}/api/myfinace/tran`, enqResident\n  //     //{ id: 33, surName: \"Nalliah\" }\n  //   );\n  // }\n  //api/myfinace/tran\n  // === endof enquires ===\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment'; // '@environments/environment';\r\nimport { User } from '../models/index'; // '@app/models';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  login(username: string, password: string): Observable<User> {\r\n    return this.apiService.authenticateUser(username, password)\r\n    .pipe(\r\n      map((user) => {\r\n        console.log('>>user received: ', user);\r\n        this.setStorage(user);\r\n        return user;\r\n      })\r\n    )\r\n  }\r\n\r\n  logout() {\r\n    // this.http\r\n    //   .post<any>(\r\n    //     `${environment.apiDomainUrl}/api/authentication/revoke-token`,\r\n    //     {},\r\n    //     { withCredentials: true }\r\n    //   )\r\n    //   .subscribe();\r\n    this.clearStorage();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  setStorage(authUserResult) {\r\n    localStorage.setItem('tokenId', authUserResult.jwtToken);\r\n  }\r\n\r\n  clearStorage() {\r\n    // localStorage.removeItem('tokenId');\r\n  }\r\n\r\n  public isLoggedIn() {\r\n    return !this.isTokenExpired();\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem('tokenId');\r\n  }\r\n\r\n  public hasToken(): boolean {\r\n    if (this.getToken()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public readToken(): any {\r\n    return this.jwtHelper.decodeToken(this.getToken());\r\n  }\r\n\r\n  public getTokenExpirationDate(): any {\r\n    return this.jwtHelper.getTokenExpirationDate(this.getToken());\r\n  }\r\n\r\n  public isTokenExpired(): boolean {\r\n    if (this.getTokenExpirationDate() != null) {\r\n      return !this.jwtHelper.isTokenExpired(this.getToken());\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public getUserReferenceIdFromToken() {\r\n    const tkn = this.getToken();\r\n    if (tkn) {\r\n      const decToken = this.readToken();\r\n      return decToken.unique_name;\r\n    }\r\n    return throwError('Reference Id not found in token');\r\n  }\r\n\r\n\r\n  // refreshToken() {\r\n  //   console.log('>>> calling refresh token in auth service.');\r\n  //   return this.http\r\n  //     .post<any>(\r\n  //       `${environment.apiDomainUrl}/api/authentication/refresh-token`,\r\n  //       {},\r\n  //       { withCredentials: true }\r\n  //     )\r\n  //     .pipe(\r\n  //       map((user) => {\r\n  //         this.setSession(user);\r\n  //         return user;\r\n  //       })\r\n  //     );\r\n  // }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *\r\n *   refreshToken() {\r\n    console.log('>>> calling refresh token in auth service.');\r\n    return this.http\r\n      .post<any>(\r\n        `${environment.apiDomainUrl}/api/authentication/refresh-token`,\r\n        {},\r\n        { withCredentials: true }\r\n      )\r\n      .pipe(\r\n        map((user) => {\r\n          this.setSession(user);\r\n          return user;\r\n        })\r\n      );\r\n  }\r\n\r\n  isLoggedInAtServer(username: string): Observable<boolean> {\r\n    return this.http.post<boolean>(\r\n      `${environment.apiDomainUrl}/api/authentication/logged-in-at-server`,\r\n      { username },\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n */","export * from './authentication.service';\r\nexport * from './user.service';\r\nexport * from './api.service';\r\nexport * from './weather.service';","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment'; // '@environments/environment';\r\nimport { User, CareHomeUser } from '../models'; // '@app/models';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiService } from './api.service';\r\nimport { Store } from '../helpers/store';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService extends Store<CareHomeUser> {\r\n\r\n  constructor(private apiService: ApiService, private authService: AuthenticationService) {\r\n    super(null)\r\n  }\r\n\r\n  public login(username: string, password: string) {\r\n    console.log('>>initiate login for ', username);\r\n    return this.authService.login(username, password)\r\n    .pipe(\r\n      map((user) => {\r\n        console.log('>>login is success.', user);\r\n        // this.setState(user);\r\n        // console.log('===refid', this.authService.getUserReferenceIdFromToken());\r\n        //this.userSubject.next(user);\r\n        //this.setUserRoleValues(user);\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n\r\n  // API calls\r\n  // used to be reloaduser()...\r\n  public reloadUser() {     //loadCareHomeUser() {\r\n    const referenceId = this.authService.getUserReferenceIdFromToken(); //.getUserIdFromToken();\r\n    console.log('>>fetching carehomeuser');\r\n    return this.apiService.getCareHomeUserByReferenceId(referenceId)       //.getUserById(id)\r\n    .pipe(\r\n      map((user) => {\r\n        console.log('setting state with care home user', user);\r\n        this.setState(user);\r\n        return user;\r\n      })\r\n    )\r\n  }\r\n\r\n  public getStoreUser(): CareHomeUser {\r\n    return this.getValue();\r\n  }\r\n\r\n  public hasUserToken(): boolean {\r\n    return this.authService.hasToken();\r\n  }\r\n\r\n  public logout(): void {\r\n    // this.userRolesSubject.next([]);\r\n    // this.userSubject.next(null);\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nexport class UserService {\r\n  private userSubject: BehaviorSubject<User>;\r\n  public user: Observable<User>;\r\n  private userRolesSubject: BehaviorSubject<string[]>;\r\n  public userRoles: Observable<string[]>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthenticationService\r\n  ) {\r\n    this.userSubject = new BehaviorSubject<User>(null);\r\n    this.user = this.userSubject.asObservable();\r\n    this.userRolesSubject = new BehaviorSubject<string[]>([]);\r\n    this.userRoles = this.userRolesSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): User {\r\n    return this.userSubject.value;\r\n  }\r\n\r\n  public get userRoleValues(): string[] {\r\n    return this.userRolesSubject.value;\r\n  }\r\n\r\n  private setUserRoleValues(user: User) {\r\n    let roles = user.roles.map((r) => {\r\n      return r.name;\r\n    });\r\n    this.userRolesSubject.next(roles);\r\n  }\r\n\r\n  public login(username: string, password: string): Observable<User> {\r\n    return this.authService.login(username, password).pipe(\r\n      map((user) => {\r\n        this.userSubject.next(user);\r\n        this.setUserRoleValues(user);\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  public hasUserToken(): boolean {\r\n    return this.authService.hasToken();\r\n  }\r\n\r\n  public isInRole(role: string): boolean {\r\n    return this.userRoleValues.some((r) => r === role);\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userRolesSubject.next([]);\r\n    this.userSubject.next(null);\r\n    this.authService.logout();\r\n  }\r\n\r\n  // API calls\r\n  public reloadUser() {\r\n    const id = this.authService.getUserIdFromToken();\r\n    return this.http\r\n      .get<User>(`${environment.apiDomainUrl}/api/users/${id}`)\r\n      .pipe(\r\n        map((user) => {\r\n          this.userSubject.next(user);\r\n          this.setUserRoleValues(user);\r\n          return user;\r\n        })\r\n      );\r\n  }\r\n\r\n  public getAll() {\r\n    return this.http.get<User[]>(`${environment.apiDomainUrl}/api/users`);\r\n  }\r\n\r\n}\r\n*/","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { WeatherForecast } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService {\n  constructor(private http: HttpClient) {}\n\n  getAll() {\n    return this.http.get<WeatherForecast[]>(\n      `${environment.apiDomainUrl}/api/weatherforecast`\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiDomainUrl: 'https://localhost:44360',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}